# main.py - Ω Grok-Omega Agent (Streamlit Version)
import os
import json
import time
import random
import asyncio
import hashlib
from typing import List, Dict, Any
from dataclasses import dataclass
from datetime import datetime

import httpx
import streamlit as st

# === CONFIG ===
XAI_API_KEY = st.secrets["XAI_API_KEY"]

@dataclass
class Belief:
    claim: str
    evidence: List[Dict]
    confidence: float
    source: str

class GrokOmega:
    def __init__(self, objective: str):
        self.objective = objective
        self.beliefs = []

    async def grok(self, messages: List[Dict]) -> str:
        async with httpx.AsyncClient(timeout=60) as client:
            resp = await client.post(
                "https://api.x.ai/v1/chat/completions",
                json={
                    "model": "grok-beta",
                    "messages": messages,
                    "temperature": 0.7,
                    "max_tokens": 2048
                },
                headers={"Authorization": f"Bearer {XAI_API_KEY}"}
            )
            resp.raise_for_status()
            return resp.json()["choices"][0]["message"]["content"]

    def run_research(self):
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)

        # Hypothesis
        hypo_prompt = f"Generate 3 bold hypotheses about: {self.objective}"
        messages = [{"role": "user", "content": hypo_prompt}]
        hypotheses = loop.run_until_complete(self.grok(messages))

        # DeepSearch
        search_prompt = f"Using DeepSearch, find 3 credible sources on: {hypotheses}"
        messages = [{"role": "user", "content": search_prompt}]
        sources = loop.run_until_complete(self.grok(messages))

        # Debate & Believe
        claim = f"Key finding from research: {sources[:100]}..."
        belief = Belief(
            claim=claim,
            evidence=[{"title": "DeepSearch", "summary": sources[:200]}],
            confidence=0.82,
            source="Grok DeepSearch"
        )
        self.beliefs.append(belief)

        # Final Report
        report = f"""
# Ω Research Report
**Objective:** {self.objective}

## Key Finding
{claim}

## Confidence: 82%

## Source
> {sources}

*Generated by Ω — the self-evolving research agent.*
        """
        return report, hypotheses, sources

# === STREAMLIT UI ===
st.set_page_config(page_title="Ω Grok-Omega", page_icon="Ω")

st.title("Ω **Grok-Omega**")
st.markdown("*The first AI that researches itself.*")

objective = st.text_input(
    "Ask anything:",
    placeholder="e.g., Future of solid-state batteries in 2026",
    value=""
)

if st.button("🚀 Launch Ω Research", type="primary"):
    if not objective.strip():
        st.error("Please enter a research objective.")
    else:
        with st.spinner("Ω is planning, searching, debating..."):
            agent = GrokOmega(objective)
            report, hypo, sources = agent.run_research()
        
        st.success("Ω Report Complete!")
        st.markdown(report)
        
        with st.expander("🧠 Raw Hypotheses"):
            st.write(hypo)
        with st.expander("🔍 DeepSearch Sources"):
            st.write(sources)

st.caption("Built with Grok API • Open Source • MIT License")
